buildscript {
    ext {
        springBootVersion = '2.1.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE")
        classpath("org.liquibase:liquibase-core:3.6.1")
        classpath "org.liquibase:liquibase-gradle-plugin:2.0.1"
//        classpath 'postgres:postgres-connector-java:5.1.34'
    }
}

plugins {
    id 'org.liquibase.gradle' version '2.0.1'
}


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.liquibase.gradle'

bootJar {
    baseName = 'gs-spring-boot'
    version = '0.1.0'
}

group 'com.project.spring'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("io.springfox:springfox-swagger-ui:2.7.0")
    compile("io.springfox:springfox-swagger2:2.7.0")
    compile("org.apache.logging.log4j:log4j-api")
    compile("org.apache.logging.log4j:log4j-core")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.postgresql:postgresql:9.4.1212")
    compile("joda-time:joda-time:2.10.2")
//    compile("org.liquibase:liquibase-core")
//    compile("org.liquibase:liquibase-gradle-plugin:2.0.1")
    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.1'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:2.0.1'
//    liquibaseRuntime 'postgres:postgres-connector-java:5.1.34'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation("com.google.code.gson:gson:2.8.2")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

def baselineChangeLog = "$projectDir/src/main/resources/liquibase/db-changelog-baseline.xml"
def databaseUrl = "jdbc:postgresql://localhost:5432/postgres"

def user = "postgres"
def pass = "postgres"

user = user == null ? postgres : user
pass = pass == null ? postgres : pass

task('baseline') << {

    println "executing baseline"

    liquibase {

        activities {

            main {

                changeLogFile baselineChangeLog

                url databaseUrl

                username user

                password pass

            }
        }
    }
}

def updateChangeLog = "$projectDir/src/main/resources/liquibase/db-changelog-update.xml"


task('huh') << {

    println "executing update"

    liquibase {

        activities {

            main {

                changeLogFile updateChangeLog

                url databaseUrl

                username user

                password pass

            }
        }
    }
}